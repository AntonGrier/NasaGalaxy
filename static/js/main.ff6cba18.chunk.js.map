{"version":3,"sources":["ui/FadeIn.tsx","ui/LoadingImage.tsx","ui/UIModal.tsx","ui/UISkeleton.tsx","ui/YoutubeEmbed.tsx","ui/theme.ts","utils/cacheImageLike.ts","utils/dateUtils.ts","hooks/store/ImageStore.tsx","injectables/nasaApi.ts","ui/LikeButton.tsx","components/ImageModal.tsx","components/ImageCard.tsx","hooks/useModal.ts","components/Content.tsx","components/ContextProviderWrapper.tsx","components/LikedList.tsx","components/NavigationBar.tsx","components/App.tsx","index.tsx"],"names":["FadeIn","children","Fade","in","useStyles","makeStyles","visible","display","nonVisible","LoadingImage","props","useState","loaded","setLoaded","Skeleton","width","height","className","alt","onLoad","UIModal","open","handleClose","Modal","onClose","Box","sx","position","overflowY","top","left","transform","maxHeight","bgcolor","border","boxShadow","padding","UISkeleton","heights","map","idx","style","marginBottom","YoutubeEmbed","url","tabIndex","src","frameBorder","allow","allowFullScreen","title","theme","createTheme","palette","primary","light","main","dark","error","typography","fontFamily","join","LIKED_IMAGE_STORE","getDateString","str","date","Date","getDate","getMonth","getFullYear","dateToYYYYMMDD","year","month","day","sortNasaImageByDate","i1","i2","date1","getTime","imageStore","makeAutoObservable","this","allImages","likedImages","likedImageSet","Set","reloadCachedImages","observable","action","cachedLikedImages","prevStore","JSON","parse","localStorage","getItem","Object","keys","getCachedLikes","clear","cachedImage","add","images","imageDate","newStore","stringify","setItem","cacheImageLike","removeImageLike","delete","ImageStoreContext","createContext","useImageContext","useContext","NASA_API_KEY","NASA_APOD_URL","getImages","start_date","end_date","axios","get","params","api_key","thumbs","getImage","imageThumbnail","borderTopLeftRadius","borderTopRightRadius","likedImageStyle","color","LikeButton","isLiked","handleLike","IconButton","aria-label","onClick","clsx","ImageModal","image","isVideo","media_type","flex","flexDirection","justifyContent","alignItems","objectFit","maxWidth","thumbnail_url","hdurl","background","Typography","variant","component","fontWeight","marginRight","overflow","explanation","root","margin","ImageCard","observer","setOpen","handleOpen","useModal","textWrap","setTextWrap","likeImage","unlikeImage","Grid","container","item","xs","Card","CardActionArea","fontSize","bottom","right","Collapse","collapsedSize","prev","lineHeight","aria-expanded","size","undefined","marginTop","Content","setAllImages","fetchingImages","setFetchingImages","useEffect","fetchImages","a","today","lastMonth","setMonth","data","sortedImages","sort","length","Array","fill","id","spacing","has","PROVIDERS","Provider","value","ContextProviderWrapper","reduceRight","acc","LikedList","setLikedImages","imageDates","from","promises","Promise","all","res","dates","response","fetchLikedImages","textAlign","filter","HideOnScroll","trigger","useScrollTrigger","Slide","appear","direction","NavigationBar","AppBar","backgroundColor","Toolbar","Button","navigate","Link","href","underline","App","ThemeProvider","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff6cba18.chunk.js","sourcesContent":["import { Fade } from '@mui/material'\r\nimport { FunctionComponent, ReactElement } from 'react'\r\n\r\nexport const FadeIn: FunctionComponent = ({ children }) => (\r\n  <Fade in={true} children={children as ReactElement} />\r\n)\r\n","import { Skeleton } from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\nimport {\r\n  DetailedHTMLProps,\r\n  FunctionComponent,\r\n  ImgHTMLAttributes,\r\n  useState,\r\n} from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n  visible: {\r\n    display: 'block',\r\n  },\r\n  nonVisible: {\r\n    display: 'none',\r\n  },\r\n})\r\n\r\nexport const LoadingImage: FunctionComponent<\r\n  DetailedHTMLProps<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>\r\n> = (props) => {\r\n  const { visible, nonVisible } = useStyles()\r\n  const [loaded, setLoaded] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Skeleton\r\n        width='100%'\r\n        height='100%'\r\n        className={loaded ? nonVisible : visible}\r\n      />\r\n      <img\r\n        {...props}\r\n        alt={props.alt}\r\n        onLoad={() => setLoaded(true)}\r\n        className={loaded ? visible : nonVisible}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import Box from '@mui/material/Box'\r\nimport Modal from '@mui/material/Modal'\r\nimport { FunctionComponent } from 'react'\r\n\r\ninterface ModalProps {\r\n  open: boolean\r\n  handleClose: () => void\r\n  fullscreen?: boolean\r\n}\r\n\r\nexport const UIModal: FunctionComponent<ModalProps> = ({\r\n  open,\r\n  handleClose,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Modal open={open} onClose={handleClose}>\r\n        <Box\r\n          sx={{\r\n            position: 'fixed',\r\n            overflowY: 'auto',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: '80%',\r\n            maxHeight: '80%',\r\n            bgcolor: 'background.paper',\r\n            border: '2px solid #000000',\r\n            boxShadow: 24,\r\n            padding: 4,\r\n          }}\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import { Skeleton } from '@mui/material'\r\nimport { FunctionComponent } from 'react'\r\n\r\ninterface UISkeletonProps {\r\n  heights: number[]\r\n}\r\nexport const UISkeleton: FunctionComponent<UISkeletonProps> = ({ heights }) => {\r\n  return (\r\n    <>\r\n      {heights.map((height, idx) => (\r\n        <Skeleton\r\n          style={{ marginBottom: '-200px' }}\r\n          key={idx}\r\n          width='30rem'\r\n          height={height}\r\n        />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","import { FunctionComponent } from 'react'\r\n\r\ninterface YoutubeEmbedProps {\r\n  url: string\r\n}\r\n\r\nexport const YoutubeEmbed: FunctionComponent<YoutubeEmbedProps> = ({ url }) => (\r\n  <div className='video-responsive' style={{ height: '20rem', width: '100%' }}>\r\n    <iframe\r\n      tabIndex={0}\r\n      width='100%'\r\n      height='100%'\r\n      src={url}\r\n      frameBorder='0'\r\n      allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n      allowFullScreen\r\n      title='Embedded youtube'\r\n    />\r\n  </div>\r\n)\r\n","import { createTheme } from '@mui/material'\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#59cff3',\r\n      main: '#36C5F0',\r\n      dark: '#10a8d6',\r\n    },\r\n    error: {\r\n      main: '#D40E0D',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: ['Lexend', 'Roboto', 'Arial'].join(','),\r\n  },\r\n})\r\n","const LIKED_IMAGE_STORE = 'LIKED_IMAGES'\r\n\r\nexport const cacheImageLike = (imageDate: string) => {\r\n  const prevStore = JSON.parse(localStorage.getItem(LIKED_IMAGE_STORE) || '{}')\r\n  const newStore = JSON.stringify({ ...prevStore, [imageDate]: true })\r\n  localStorage.setItem(LIKED_IMAGE_STORE, newStore)\r\n}\r\n\r\nexport const removeImageLike = (imageDate: string) => {\r\n  const prevStore = JSON.parse(localStorage.getItem(LIKED_IMAGE_STORE) || '{}')\r\n  if (imageDate in prevStore) {\r\n    delete prevStore[imageDate]\r\n  }\r\n  const newStore = JSON.stringify(prevStore)\r\n  localStorage.setItem(LIKED_IMAGE_STORE, newStore)\r\n}\r\n\r\nexport const getCachedLikes = (): string[] => {\r\n  const prevStore = JSON.parse(localStorage.getItem(LIKED_IMAGE_STORE) || '{}')\r\n  return Object.keys(prevStore)\r\n}\r\n","import { NasaImageMetadata } from '../models'\r\n\r\nexport const getDateString = (str: string) => {\r\n  const monthNames = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ]\r\n  const date = new Date(str)\r\n  return `${date.getDate()} ${\r\n    monthNames[date.getMonth()]\r\n  } ${date.getFullYear()}`\r\n}\r\n\r\nexport const dateToYYYYMMDD = (date: Date) => {\r\n  const year = date.getFullYear()\r\n  const month = date.getMonth() + 1\r\n  const day = date.getDate()\r\n  return `${year}-${month < 10 ? '0' + month : month}-${\r\n    day < 10 ? '0' + day : day\r\n  }`\r\n}\r\n\r\nexport const sortNasaImageByDate = (\r\n  i1: NasaImageMetadata,\r\n  i2: NasaImageMetadata,\r\n) => {\r\n  const date1 = new Date(i1.date)\r\n  const date2 = new Date(i2.date)\r\n  return date2.getTime() - date1.getTime()\r\n}\r\n","import { action, makeAutoObservable, observable } from 'mobx'\r\nimport { createContext, FunctionComponent, useContext } from 'react'\r\nimport { NasaImageMetadata } from '../../models'\r\nimport { cacheImageLike, getCachedLikes, removeImageLike } from '../../utils'\r\n\r\ninterface IImageStore {\r\n  allImages: NasaImageMetadata[]\r\n  likedImages: NasaImageMetadata[]\r\n  likedImageSet: Set<string>\r\n}\r\n\r\nexport class ImageStore implements IImageStore {\r\n  @observable allImages: NasaImageMetadata[]\r\n  @observable likedImages: NasaImageMetadata[]\r\n  @observable likedImageSet: Set<string>\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    this.allImages = []\r\n    this.likedImages = []\r\n    this.likedImageSet = new Set()\r\n    this.reloadCachedImages()\r\n  }\r\n\r\n  @action reloadCachedImages = () => {\r\n    const cachedLikedImages = getCachedLikes()\r\n    this.likedImageSet.clear()\r\n\r\n    for (const cachedImage of cachedLikedImages) {\r\n      this.likedImageSet.add(cachedImage)\r\n    }\r\n  }\r\n\r\n  @action setAllImages = (images: NasaImageMetadata[]) => {\r\n    this.allImages = images\r\n  }\r\n\r\n  @action setLikedImages = (images: NasaImageMetadata[]) => {\r\n    this.likedImages = images\r\n  }\r\n\r\n  @action likeImage = (imageDate: string) => {\r\n    cacheImageLike(imageDate)\r\n    this.likedImageSet.add(imageDate)\r\n  }\r\n\r\n  @action unlikeImage = (imageDate: string) => {\r\n    removeImageLike(imageDate)\r\n    this.likedImageSet.delete(imageDate)\r\n  }\r\n}\r\n\r\nconst imageStore = new ImageStore()\r\nexport const ImageStoreContext = createContext<ImageStore>(imageStore)\r\nexport const useImageContext = () => useContext(ImageStoreContext)\r\n\r\nexport const ImageStoreProvider: FunctionComponent = ({ children }) => (\r\n  <ImageStoreContext.Provider value={imageStore}>\r\n    {children}\r\n  </ImageStoreContext.Provider>\r\n)\r\n","import axios from 'axios'\r\nimport { NasaImageMetadata } from '../models'\r\n\r\nconst NASA_API_KEY = 'acPr7twdBH1nxguGu28anvKxPKuaVXbjwj0Jf8bG'\r\nconst NASA_APOD_URL = 'https://api.nasa.gov/planetary/apod'\r\n\r\ninterface APODRangeProps {\r\n  start_date: string\r\n  end_date: string\r\n}\r\n\r\ninterface APODSingleProps {\r\n  date: string\r\n}\r\n\r\nexport const getImages = ({ start_date, end_date }: APODRangeProps) =>\r\n  axios.get<NasaImageMetadata[]>(NASA_APOD_URL, {\r\n    params: { start_date, end_date, api_key: NASA_API_KEY, thumbs: true },\r\n  })\r\n\r\nexport const getImage = ({ date }: APODSingleProps) =>\r\n  axios.get<NasaImageMetadata>(NASA_APOD_URL, {\r\n    params: { date, api_key: NASA_API_KEY, thumbs: true },\r\n  })\r\n","import { IconButton } from '@mui/material'\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder'\r\nimport FavoriteIcon from '@mui/icons-material/Favorite'\r\nimport clsx from 'clsx'\r\nimport { FunctionComponent } from 'react'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  imageThumbnail: {\r\n    width: '100%',\r\n    borderTopLeftRadius: '5px',\r\n    borderTopRightRadius: '5px',\r\n  },\r\n  likedImageStyle: { color: 'red' },\r\n})\r\n\r\ninterface LikeButtonProps {\r\n  isLiked: boolean\r\n  handleLike: () => void\r\n  title: string\r\n}\r\n\r\nexport const LikeButton: FunctionComponent<LikeButtonProps> = ({\r\n  isLiked,\r\n  handleLike,\r\n  title,\r\n}) => {\r\n  const { likedImageStyle } = useStyles()\r\n\r\n  return (\r\n    <IconButton\r\n      aria-label={`${isLiked ? 'Dislike' : 'Like'} post: ${title}`}\r\n      onClick={handleLike}\r\n      className={clsx(\r\n        isLiked ? `${likedImageStyle} likedAnimation` : 'unlikedAnimation',\r\n      )}\r\n      children={isLiked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n    />\r\n  )\r\n}\r\n","import { Typography } from '@mui/material'\r\nimport { FunctionComponent } from 'react'\r\nimport { NasaImageMetadata } from '../models'\r\nimport { LikeButton } from '../ui/LikeButton'\r\nimport { LoadingImage, UIModal, YoutubeEmbed } from '../ui'\r\nimport { getDateString } from '../utils'\r\n\r\ninterface ImageModalProps {\r\n  image: NasaImageMetadata\r\n  isLiked: boolean\r\n  handleLike: () => void\r\n  open: boolean\r\n  handleClose: () => void\r\n}\r\n\r\nexport const ImageModal: FunctionComponent<ImageModalProps> = ({\r\n  image,\r\n  isLiked,\r\n  handleLike,\r\n  open,\r\n  handleClose,\r\n}) => {\r\n  const isVideo = image.media_type === 'video'\r\n\r\n  return (\r\n    <UIModal open={open} handleClose={handleClose}>\r\n      <div style={{ display: 'flex', height: '100%' }}>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              width: '70%',\r\n              height: '100%',\r\n            }}\r\n          >\r\n            {isVideo ? (\r\n              <YoutubeEmbed url={image.url} />\r\n            ) : (\r\n              <LoadingImage\r\n                style={{\r\n                  objectFit: 'cover',\r\n                  maxWidth: '100%',\r\n                  width: 'auto',\r\n                  height: 'auto',\r\n                }}\r\n                alt={image.title}\r\n                src={\r\n                  image.media_type === 'video'\r\n                    ? image.thumbnail_url\r\n                    : image.hdurl\r\n                }\r\n              />\r\n            )}\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                background: '#777777',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                border: '0.5px solid black',\r\n              }}\r\n            >\r\n              <LikeButton\r\n                title={image.title}\r\n                isLiked={isLiked}\r\n                handleLike={handleLike}\r\n              />\r\n              <Typography\r\n                variant='caption'\r\n                component='h3'\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  marginRight: '10px',\r\n                }}\r\n              >\r\n                {getDateString(image.date)}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            overflow: 'auto',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Typography\r\n            variant='body1'\r\n            component='h2'\r\n            style={{ fontWeight: 'bold' }}\r\n          >\r\n            {image.title}\r\n          </Typography>\r\n          <Typography variant='subtitle2' component='h3'>\r\n            {image.explanation}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </UIModal>\r\n  )\r\n}\r\n","import {\r\n  Card,\r\n  CardActionArea,\r\n  Collapse,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n} from '@mui/material'\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\r\nimport VideocamTwoToneIcon from '@mui/icons-material/VideocamTwoTone'\r\nimport makeStyles from '@mui/styles/makeStyles'\r\nimport { FunctionComponent, useState } from 'react'\r\nimport { NasaImageMetadata } from '../models'\r\nimport { observer } from 'mobx-react'\r\nimport { useImageContext, useModal } from '../hooks'\r\nimport { FadeIn, LoadingImage } from '../ui'\r\nimport { LikeButton } from '../ui/LikeButton'\r\nimport { ImageModal } from './ImageModal'\r\nimport { getDateString } from '../utils'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '20px 0',\r\n  },\r\n  imageThumbnail: {\r\n    width: '100%',\r\n    borderTopLeftRadius: '5px',\r\n    borderTopRightRadius: '5px',\r\n  },\r\n})\r\n\r\ninterface ImageCardProps {\r\n  image: NasaImageMetadata\r\n  isLiked: boolean\r\n}\r\n\r\nconst BaseImageCard: FunctionComponent<ImageCardProps> = ({\r\n  image,\r\n  isLiked,\r\n}) => {\r\n  const { root, imageThumbnail } = useStyles()\r\n  const { open, handleOpen, handleClose } = useModal()\r\n  const [textWrap, setTextWrap] = useState(true)\r\n  const { likeImage, unlikeImage } = useImageContext()\r\n\r\n  const isVideo = image.media_type === 'video'\r\n\r\n  const handleLike = () => {\r\n    if (isLiked) {\r\n      unlikeImage(image.date)\r\n    } else {\r\n      likeImage(image.date)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid className={root} container item xs={12} justifyContent={'center'}>\r\n      <FadeIn>\r\n        <Card style={{ width: '35rem' }}>\r\n          <ImageModal\r\n            open={open}\r\n            handleClose={handleClose}\r\n            image={image}\r\n            handleLike={handleLike}\r\n            isLiked={isLiked}\r\n          />\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'flex-start',\r\n            }}\r\n          >\r\n            <CardActionArea\r\n              onClick={() => handleOpen()}\r\n              aria-label={`Open Modal for post: ${image.title}`}\r\n            >\r\n              <LoadingImage\r\n                className={imageThumbnail}\r\n                alt={image.title}\r\n                src={isVideo ? image.thumbnail_url : image.url}\r\n                width='100%'\r\n              />\r\n              {isVideo && (\r\n                <VideocamTwoToneIcon\r\n                  fontSize='large'\r\n                  style={{\r\n                    color: 'white',\r\n                    position: 'absolute',\r\n                    bottom: '1%',\r\n                    right: '1%',\r\n                  }}\r\n                />\r\n              )}\r\n            </CardActionArea>\r\n            <div\r\n              style={{\r\n                background: '#777777',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                border: '0.5px solid black',\r\n              }}\r\n            >\r\n              <LikeButton\r\n                title={image.title}\r\n                isLiked={isLiked}\r\n                handleLike={handleLike}\r\n              />\r\n              <Typography\r\n                variant='caption'\r\n                component='h3'\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  marginRight: '10px',\r\n                }}\r\n              >\r\n                {getDateString(image.date)}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n          <div style={{ padding: '10px' }}>\r\n            <Typography\r\n              variant='body1'\r\n              component='h2'\r\n              style={{ fontWeight: 'bold', width: '100%' }}\r\n            >\r\n              {image.title}\r\n            </Typography>\r\n            <Collapse in={!textWrap} collapsedSize={48}>\r\n              <Typography\r\n                onClick={() => setTextWrap((prev) => !prev)}\r\n                variant='subtitle2'\r\n                component='h3'\r\n                lineHeight='normal'\r\n              >\r\n                {image.explanation}\r\n              </Typography>\r\n            </Collapse>\r\n            <div\r\n              style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <IconButton\r\n                aria-expanded={!textWrap}\r\n                aria-label={`${\r\n                  textWrap ? 'Expand' : 'Collapse'\r\n                } description of post: ${image.title}`}\r\n                size='small'\r\n                style={{\r\n                  transform: textWrap ? undefined : 'rotate(180deg)',\r\n                  marginBottom: '-10px',\r\n                  marginTop: '-5px',\r\n                }}\r\n                onClick={() => setTextWrap((prev) => !prev)}\r\n                children={<ArrowDropDownIcon />}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </FadeIn>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport const ImageCard = observer(BaseImageCard)\r\n","import { useState } from 'react'\r\n\r\nexport const useModal = () => {\r\n  const [open, setOpen] = useState(false)\r\n  const handleOpen = () => setOpen(true)\r\n  const handleClose = () => setOpen(false)\r\n\r\n  return { open, handleOpen, handleClose }\r\n}\r\n","import { Grid } from '@mui/material'\r\nimport { RouteComponentProps } from '@reach/router'\r\nimport { observer } from 'mobx-react'\r\nimport { FunctionComponent, useEffect, useState } from 'react'\r\nimport { useImageContext } from '../hooks'\r\nimport { getImages } from '../injectables'\r\nimport { UISkeleton } from '../ui'\r\nimport { dateToYYYYMMDD, sortNasaImageByDate } from '../utils'\r\nimport { ImageCard } from './ImageCard'\r\n\r\nconst BaseContent: FunctionComponent<RouteComponentProps> = () => {\r\n  const {\r\n    likedImageSet: likedImages,\r\n    allImages,\r\n    setAllImages,\r\n  } = useImageContext()\r\n  const [fetchingImages, setFetchingImages] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      setFetchingImages(true)\r\n\r\n      const today = new Date()\r\n      const lastMonth = new Date()\r\n      lastMonth.setMonth(lastMonth.getMonth() - 1)\r\n      const start_date = dateToYYYYMMDD(lastMonth)\r\n      const end_date = dateToYYYYMMDD(today)\r\n\r\n      const { data } = await getImages({\r\n        start_date,\r\n        end_date,\r\n      })\r\n      const sortedImages = data.sort(sortNasaImageByDate)\r\n      setFetchingImages(false)\r\n      setAllImages(sortedImages)\r\n    }\r\n    if (!allImages.length) fetchImages()\r\n  }, [allImages, setAllImages])\r\n\r\n  return fetchingImages ? (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <UISkeleton heights={Array(2).fill(600)} />\r\n    </div>\r\n  ) : (\r\n    <Grid id='main' container spacing={4} style={{ marginTop: '4%' }}>\r\n      {allImages.map((image) => (\r\n        <ImageCard\r\n          key={image.date}\r\n          image={image}\r\n          isLiked={likedImages.has(image.date)}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport const Content = observer(BaseContent)\r\n","import { FunctionComponent } from 'react'\r\nimport { ImageStoreProvider } from '../hooks'\r\n\r\n// Multiple Context Providers are chained here\r\nconst PROVIDERS = [ImageStoreProvider]\r\n\r\nexport const ContextProviderWrapper: FunctionComponent = ({ children }) => (\r\n  <>\r\n    {PROVIDERS.reduceRight(\r\n      (acc, Provider) => (\r\n        <Provider>{acc}</Provider>\r\n      ),\r\n      children,\r\n    )}\r\n  </>\r\n)\r\n","import { Grid, Typography } from '@mui/material'\r\nimport { RouteComponentProps } from '@reach/router'\r\nimport { observer } from 'mobx-react'\r\nimport { FunctionComponent, useEffect, useState } from 'react'\r\nimport { useImageContext } from '../hooks'\r\nimport { getImage } from '../injectables'\r\nimport { UISkeleton } from '../ui'\r\nimport { sortNasaImageByDate } from '../utils'\r\nimport { ImageCard } from './ImageCard'\r\n\r\nconst BaseLikedList: FunctionComponent<RouteComponentProps> = () => {\r\n  const [fetchingImages, setFetchingImages] = useState(false)\r\n  const { likedImageSet, likedImages, setLikedImages } = useImageContext()\r\n\r\n  useEffect(() => {\r\n    const fetchLikedImages = async () => {\r\n      setFetchingImages(true)\r\n      const imageDates = Array.from(likedImageSet)\r\n      const promises = imageDates.map((date) => getImage({ date }))\r\n      const res = await Promise.all(promises)\r\n      const dates = res\r\n        .map((response) => response.data)\r\n        .sort(sortNasaImageByDate)\r\n      setLikedImages(dates)\r\n      setFetchingImages(false)\r\n    }\r\n    fetchLikedImages()\r\n  }, [likedImageSet, setLikedImages])\r\n\r\n  return (\r\n    <>\r\n      <Typography\r\n        component='h2'\r\n        variant='h4'\r\n        style={{\r\n          marginTop: '100px',\r\n          width: '100%',\r\n          textAlign: 'center',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        Liked Posts\r\n      </Typography>\r\n      {fetchingImages ? (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <UISkeleton heights={Array(2).fill(600)} />\r\n        </div>\r\n      ) : (\r\n        <Grid id='main' container spacing={4} style={{ marginTop: '10px' }}>\r\n          {likedImages\r\n            .filter((image) => likedImageSet.has(image.date))\r\n            .map((image) => (\r\n              <ImageCard\r\n                key={image.date}\r\n                image={image}\r\n                isLiked={likedImageSet.has(image.date)}\r\n              />\r\n            ))}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const LikedList = observer(BaseLikedList)\r\n","import { FunctionComponent, ReactElement } from 'react'\r\nimport { navigate } from '@reach/router'\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder'\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  IconButton,\r\n  Link,\r\n  Toolbar,\r\n  Typography,\r\n  useScrollTrigger,\r\n} from '@mui/material'\r\nimport Slide from '@mui/material/Slide'\r\n\r\nconst HideOnScroll: FunctionComponent = ({ children }) => {\r\n  const trigger = useScrollTrigger()\r\n\r\n  return (\r\n    <Slide appear={false} direction='down' in={!trigger}>\r\n      {children as ReactElement}\r\n    </Slide>\r\n  )\r\n}\r\n\r\nexport const NavigationBar: FunctionComponent = ({ children }) => {\r\n  return (\r\n    <>\r\n      <HideOnScroll>\r\n        <AppBar\r\n          style={{\r\n            backgroundColor: 'black',\r\n          }}\r\n        >\r\n          <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div>\r\n              <Button\r\n                onClick={() => navigate('/')}\r\n                style={{ padding: '0 10px' }}\r\n                aria-label={'Navigate Home'}\r\n              >\r\n                <Typography\r\n                  style={{ fontFamily: 'fantasy' }}\r\n                  color='white'\r\n                  variant='h4'\r\n                  component='h1'\r\n                >\r\n                  Starbound\r\n                </Typography>\r\n              </Button>\r\n              <Link\r\n                href='#main'\r\n                className='skip-to-content-link'\r\n                underline='none'\r\n              >\r\n                <Typography\r\n                  className='skip-to-content-text'\r\n                  variant='h6'\r\n                  component='h2'\r\n                >\r\n                  Skip to Content\r\n                </Typography>\r\n              </Link>\r\n            </div>\r\n            <IconButton\r\n              onClick={() => navigate('/liked')}\r\n              aria-label='Navigate to Liked posts'\r\n              style={{ color: 'white' }}\r\n              children={<FavoriteBorderIcon />}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n","import { ThemeProvider } from '@mui/styles'\r\nimport { Router } from '@reach/router'\r\nimport { theme } from '../ui'\r\nimport { Content } from './Content'\r\nimport { ContextProviderWrapper } from './ContextProviderWrapper'\r\nimport { LikedList } from './LikedList'\r\nimport { NavigationBar } from './NavigationBar'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ContextProviderWrapper>\r\n        <NavigationBar>\r\n          <Router id='router'>\r\n            <Content path='/' />\r\n            <LikedList path='liked' />\r\n          </Router>\r\n        </NavigationBar>\r\n      </ContextProviderWrapper>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { App } from './components'\r\nimport { StrictMode } from 'react'\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}